@using jqGrid01.Models
@using JqGridHelper.Utils
@{
    ViewBag.Title = "Index";
}

<div dir="rtl" align="center">
    <div id="rsperror"></div>
    <table id="list" cellpadding="0" cellspacing="0"></table>
    <div id="pager" style="text-align:center;"></div>
    <button onclick="loadGrid()">Load Grid</button>
</div>

@section Scripts
{
    <script type="text/javascript">

        function getHiddenColumnsList() {
            var colModel = $("#list").jqGrid('getGridParam', 'colModel');
            var hiddenColumns = new Array();

            if (!colModel)
                return hiddenColumns;

            for (var i = 0; i < colModel.length; i++) {
                if (colModel[i].hidden) {
                    hiddenColumns.push(colModel[i].name);
                }
            }
            return hiddenColumns;
        }

        $.jgrid.formatter.integer.thousandsSeparator = ',';
        $.jgrid.formatter.number.thousandsSeparator = ',';
        $.jgrid.formatter.currency.thousandsSeparator = ',';

        $(document).ready(function () {
        });

        function loadGrid() {
            $('#list').jqGrid({
                caption: "آزمایش اول",
                //url from wich data should be requested
                url: '@Url.Action("GetProducts","Home")',
                //type of data
                datatype: 'json',
                jsonReader: {
                    root: "Rows",
                    page: "Page",
                    total: "Total",
                    records: "Records",
                    repeatitems: true,
                    userdata: "UserData",
                    id: "Id",
                    cell: "RowCells"
                },
                //url access method type
                mtype: 'GET',
                //columns names
                colNames: ['شماره', 'نام محصول', 'موجود است', 'قیمت'],
                //columns model
                colModel: [
                    {
                        name: '@(StronglyTyped.PropertyName<Product>(x=>x.Id))',
                        index: '@(StronglyTyped.PropertyName<Product>(x=>x.Id))',
                        align: 'right', width: 50, sorttype: "number", hidden: true, key: true
                    },
                    {
                        name: '@(StronglyTyped.PropertyName<Product>(x=>x.Name))',
                        index: '@(StronglyTyped.PropertyName<Product>(x=>x.Name))',
                        align: 'right', width: 300
                    },
                    {
                        name: '@(StronglyTyped.PropertyName<Product>(x=>x.IsAvailable))',
                        index: '@(StronglyTyped.PropertyName<Product>(x=>x.IsAvailable))',
                        align: 'center', width: 100, formatter: 'checkbox'
                    },
                    {
                        name: '@(StronglyTyped.PropertyName<Product>(x=>x.Price))',
                        index: '@(StronglyTyped.PropertyName<Product>(x=>x.Price))',
                        align: 'center', width: 100, sorttype: "number"
                    }
                ],
                //pager for grid
                pager: $('#pager'),
                //number of rows per page
                rowNum: 10,
                rowList: [10, 20, 50, 100],
                //initial sorting column
                sortname: 'Id',
                //initial sorting direction
                sortorder: 'asc',
                //we want to display total records count
                viewrecords: true,
                altRows: true,
                width: '500',
                shrinkToFit: false,
                height: 'auto',
                hidegrid: false,
                direction: "rtl",
                gridview: true,
                rownumbers: true,
                footerrow: true,
                userDataOnFooter: true,
                loadComplete: function () {
                    //change alternate rows color
                    $("tr.jqgrow:odd").css("background", "#E0E0E0");
                },
                loadError: function (xhr, st, err) {
                    jQuery("#rsperror").html("Type: " + st + "; Response: " + xhr.status + " " + xhr.statusText);
                },
                postData: { 'hiddenColumns': function () { return getHiddenColumnsList(); } }
            })
            .jqGrid('navGrid', "#pager",
            {
                edit: false, add: false, del: false, search: false,
                refresh: true
            })
            .jqGrid('navButtonAdd', '#pager',
            {
                caption: "تنظیم نمایش ستون‌ها", title: "Reorder Columns",
                onClickButton: function () {
                    jQuery("#list").jqGrid('columnChooser', {
                        done: function (perm)
                        {
                            if (perm) {
                                $("#list").jqGrid("remapColumns", perm, true, false);
                            }
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("HiddenColumns","Home")",
                                dataType: "json",
                                traditional: true,
                                data: { hiddenColumns: getHiddenColumnsList() }
                            });
                        }
                });
            }
            }).jqGrid('gridResize', { minWidth: 400 });
        }
    </script>
}